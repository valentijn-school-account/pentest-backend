package docker

import (
	"github.com/gofiber/websocket/v2"
)

type C struct{} // Add more data to this type if needed

var Clients = make(map[*websocket.Conn]C) // Note: although large maps with pointer-like types (e.g. strings) as keys are slow, using pointers themselves as keys is acceptable and fast
var Register = make(chan *websocket.Conn)
var Broadcast = make(chan WebSocketResponse)
var Unregister = make(chan *websocket.Conn)

func RunWebSocket() {
	for {
		select {
		case connection := <-Register:
			Clients[connection] = C{}

		case response := <-Broadcast:
			if err := response.Client.WriteJSON(response); err != nil {
				response.Client.WriteMessage(websocket.CloseMessage, []byte{})
			}

		case connection := <-Unregister:
			// Remove the client from the hub
			delete(Clients, connection)
		}
	}
}
