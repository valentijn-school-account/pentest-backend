package prometheus

import (
	"context"
	"fmt"
	v1 "github.com/prometheus/client_golang/api/prometheus/v1"
	"math"
	"pentest-backend/database/models"
	"time"
)

func FetchWeekExperience(user models.User) ([]ExperienceEntry, error) {
	var entries []ExperienceEntry
	v1api := v1.NewAPI(PrometheusClient)
	ctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)
	defer cancel()

	d := time.Duration(math.Min(float64(time.Hour*24), float64(time.Now().Sub(user.CreatedAt))/7))
	now := time.Now()
	t := now.Add(-d * 7)

	query, _, err := v1api.QueryRange(ctx, fmt.Sprintf("rate(pentest_experience_bucket{user=\"%v\"})", user.ID), v1.Range{Step: d, Start: t, End: time.Now()})

	if err != nil {
		return nil, err
	}

	fmt.Printf("\nA: %v", now.Sub(t).Seconds())
	fmt.Printf("\nB: %v", d.Seconds())

	fmt.Printf("\nC: %v", query)

	//var array []model.SamplePair
	//var a = query.String()
	//
	//
	//
	//
	//for key, value := range matrix {
	//	v, err := strconv.Atoi(value.SeriesLabels.String())
	//	if err != nil {
	//		return nil, err
	//	}
	//
	//	entries = append(entries, ExperienceEntry{Day: time.Unix(int64(key), 0).Weekday().String(), Value: v})
	//}

	return entries, nil
}
