package prometheus

import (
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"pentest-backend/database/models"
	"time"
)

func FetchWeekExperience(user models.User) ([]ExperienceEntry, error) {
	var entries []ExperienceEntry

	for i := 0; i <= 7; i++ {
		date := time.Now().AddDate(0, 0, -i)
		resp, err := http.Get("http://localhost:9090/api/v1/query?query=" + fmt.Sprintf("pentest_experience_sum{user=\"%v\", date=\"%v\", day=\"%v\"}", user.ID, date.Format("2006-01-02"), date.Weekday()) + "&time=" + fmt.Sprintf("%v", time.Now().Unix()))
		if err != nil {
			return nil, err
		}

		body, err := io.ReadAll(resp.Body)

		var data Response

		err = json.Unmarshal(body, &data)
		if err != nil {
			return nil, err
		}

		fmt.Printf("Value => \n%v\n ", data)
		if len(data.Data.Data) == 0 || len(data.Data.Data[0].Values) == 0 {
			entries = append(entries, ExperienceEntry{Day: date.Weekday().String(), Value: "0"})
		} else {
			entries = append(entries, ExperienceEntry{Day: date.Weekday().String(), Value: data.Data.Data[0].Values[1].String()})
		}
	}

	return entries, nil
}
