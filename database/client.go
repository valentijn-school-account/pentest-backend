package database

import (
	"gorm.io/driver/sqlite"
	"gorm.io/gorm"
	"pentest-backend/database/models"
	"pentest-backend/remote/docker"
)

var Client *gorm.DB

func Load() {
	//Creates database connection
	db, err := gorm.Open(sqlite.Open("main.db"), &gorm.Config{})
	Client = db

	if err != nil {
		panic("failed to connect to the database")
	}

	loadModels(db)

	var containers []models.Container
	db.Table("containers").Find(&containers)

	for _, container := range containers {
		docker.AttachContainer(container)
	}

}

// Loads in the tables
func loadModels(db *gorm.DB) {
	db.AutoMigrate(&models.User{})
	db.AutoMigrate(&models.Project{})
	db.AutoMigrate(&models.Step{})
	db.AutoMigrate(&models.Container{})
	db.AutoMigrate(&models.Class{})
	db.AutoMigrate(&models.Progress{})
	db.AutoMigrate(&models.Topic{})
	db.AutoMigrate(&models.Concept{})
	db.AutoMigrate(&models.ExperienceGained{})
}
