package main

import (
	"github.com/joho/godotenv"
	"github.com/prometheus/client_golang/prometheus"
	"github.com/prometheus/client_golang/prometheus/promhttp"
	"log"
	"net/http"
	"os"
	"pentest-backend/api"
	"pentest-backend/database"
	"pentest-backend/metrics"
	"pentest-backend/remote/docker"
	"pentest-backend/remote/google"
)

//Main function
func main() {
	database.Load()
	loadEnvFile()
	loadBackends()
	go setupMetrics()
	go api.StartServer()
}

func setupMetrics() {
	prometheus.MustRegister(metrics.UserExperience)
	http.Handle("/metrics", promhttp.Handler())
	log.Fatal(http.ListenAndServe("127.0.0.1:8081", nil))
}

func loadEnvFile() {
	// load .env file
	err := godotenv.Load(".env")

	if err != nil {
		log.Fatalf("Error loading .env file")
	}
}

//Loads and authenticates backend APIs.
func loadBackends() {
	google.InitKeys(goDotEnvVariable("JWT_SECRET"), goDotEnvVariable("CLIENT_ID"))
	docker.Load()
}

// use godot package to load/read the .env file and
// return the value of the key
func goDotEnvVariable(key string) string {

	// load .env file
	err := godotenv.Load(".env")

	if err != nil {
		log.Fatalf("Error loading .env file")
	}

	return os.Getenv(key)
}
