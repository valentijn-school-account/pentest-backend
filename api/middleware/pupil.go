package middleware

import (
	"github.com/gofiber/fiber/v2"
	"net/http"
	"pentest-backend/database"
	"pentest-backend/database/models"
	"pentest-backend/remote/google"
)

// InjectPupil => Injects Pupil User into local storage.
func InjectPupil(c *fiber.Ctx) error {
	pupilMail := c.Params("pupil")
	var pupil models.User

	claims := c.Locals("user").(google.GoogleClaims)
	var user models.User
	database.Client.Table("users").Where(models.User{Mail: claims.Email}).First(&user)

	if user.ID == 0 {
		return fiber.NewError(http.StatusNotFound, "Could not fetch user details.")
	}

	database.Client.Table("users").Where(&models.User{Mail: pupilMail}).First(&pupil)

	if pupil.ID == 0 {
		return fiber.NewError(http.StatusNotFound, "Could not find pupil.")
	}

	var classes []models.Class
	database.Client.Table("classes").Where(&models.Class{TeacherID: user.ID}).Find(&classes)

	if pupil.Class == "" {
		return fiber.NewError(http.StatusNotFound, "Could not find pupil.")
	}

	found := false

	for _, class := range classes {
		if pupil.Class == class.UUID {
			found = true
			break
		}
	}

	if !found {
		return fiber.NewError(http.StatusNotFound, "Could not find pupil.")
	}

	c.Locals("pupil", pupil)

	return c.Next()
}
