package middleware

import (
	"fmt"
	"github.com/gofiber/fiber/v2"
	"net/http"
	"pentest-backend/database/models"
	"pentest-backend/remote/docker"
)

// InjectAllocation => Injects Allocation address into the request storage
func InjectAllocation(c *fiber.Ctx) error {
	container := c.Locals("container").(models.Container)
	online, err := docker.FetchState(c.Context(), container)

	if err != nil {
		return fiber.NewError(http.StatusInternalServerError, "An error occurred while connecting to the container.")
	}

	if !online {
		return fiber.NewError(http.StatusNotAcceptable, "The container is offline")
	}

	allocation, host, err := docker.FetchAllocation(c.Context(), container)

	if err != nil {
		return fiber.NewError(http.StatusInternalServerError, fmt.Sprintf("\nAn error occured while fetching container data: %v", err))
	}

	c.Locals("allocation", allocation)
	c.Locals("host", host)
	return c.Next()
}
