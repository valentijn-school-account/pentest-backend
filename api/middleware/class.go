package middleware

import (
	"github.com/gofiber/fiber/v2"
	"net/http"
	"pentest-backend/database"
	"pentest-backend/database/models"
	"pentest-backend/remote/google"
)

// InjectClass => Injects Class into the request storage
func InjectClass(c *fiber.Ctx) error {
	classParam := c.Params("class")
	var class models.Class

	claims := c.Locals("user").(google.GoogleClaims)
	var user models.User
	database.Client.Table("users").Where(models.User{Mail: claims.Email}).First(&user)

	if user.ID == 0 {
		return fiber.NewError(http.StatusNotFound, "Could not fetch user details.")
	}

	database.Client.Table("classes").Where(&models.Class{UUID: classParam, TeacherID: user.ID}).First(&class)

	if class.ID == 0 {
		return fiber.NewError(http.StatusNotFound, "Could not find class.")
	}

	c.Locals("class", class)
	return c.Next()
}
