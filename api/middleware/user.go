package middleware

import (
	"github.com/dgrijalva/jwt-go"
	"github.com/gofiber/fiber/v2"
	"net/http"
	"pentest-backend/remote/google"
)

// VerifyCookie => Test to verify if the user is authenticated.
func VerifyCookie(c *fiber.Ctx) error {
	cookie := c.Cookies("authentication")

	//No cookie defined, first needs to log in.
	if cookie == "" {
		return c.Redirect("/")
	}

	claims := &google.GoogleClaims{}

	tkn, err := jwt.ParseWithClaims(cookie, claims, func(token *jwt.Token) (interface{}, error) {
		return google.JWTSecret, nil
	})

	//Verifying the contents of the cookie.
	if err != nil {
		return fiber.NewError(http.StatusInternalServerError, "Could not parse cookie.")
	}

	if !tkn.Valid {
		return c.RedirectBack("/", fiber.StatusUnauthorized)
	}

	//Passed the cookie test.
	c.Locals("user", claims)
	return c.Next()
}
