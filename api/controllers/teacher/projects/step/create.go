package step

import (
	"fmt"
	"github.com/gofiber/fiber/v2"
	uuid2 "github.com/savsgio/gotils/uuid"
	"net/http"
	"pentest-backend/database"
	"pentest-backend/database/models"
)

type ParamStepsCreation struct {
	Title   string `json:"title"`
	Project string `json:"project"`
}

func CreateSteps(c *fiber.Ctx) error {
	var param ParamStepsCreation

	if err := c.BodyParser(&param); err != nil {
		return fiber.NewError(http.StatusUnprocessableEntity, fmt.Sprintf("Can't process data: %v", err))
	}

	if param.Project == "" {
		return fiber.NewError(http.StatusUnprocessableEntity, "Please provide a project id")
	}

	if param.Title == "" {
		return fiber.NewError(http.StatusUnprocessableEntity, "Please provide a title")
	}

	var project models.Project

	database.Client.Table("projects").Where("uuid", param.Project).First(&project)

	if project.ID == 0 {
		return fiber.NewError(http.StatusNotFound, "Project not found.")
	}

	var steps []models.Step
	database.Client.Table("steps").Where(&models.Step{ProjectID: project.ID}).Find(&steps)

	var step models.Step
	step.Header = param.Title
	step.UUID = uuid2.V4()
	step.ProjectID = project.ID
	step.Index = uint(len(steps))

	database.Client.Table("steps").Create(&step)

	return c.JSON(&step)
}
