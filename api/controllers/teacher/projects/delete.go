package projects

import (
	"fmt"
	"github.com/gofiber/fiber/v2"
	"net/http"
	"pentest-backend/database"
	"pentest-backend/database/models"
)

type ParamDeletionProject struct {
	Project string `json:"project"`
}

func HandleDeleteProject(c *fiber.Ctx) error {
	var param ParamDeletionProject

	if err := c.BodyParser(&param); err != nil {
		return fiber.NewError(http.StatusUnprocessableEntity, fmt.Sprintf("Can't process data: %v", err))
	}

	if param.Project == "" {
		return fiber.NewError(http.StatusUnprocessableEntity, "Please provide a project uuid")
	}

	var project models.Project

	database.Client.Table("projects").Where(&models.Project{UUID: param.Project}).First(&project)

	if project.ID == 0 {
		return fiber.NewError(http.StatusNotFound, "Project was not found.")
	}

	database.Client.Table("projects").Where("id", project.ID).Delete(&project)

	return c.SendStatus(http.StatusOK)
}
