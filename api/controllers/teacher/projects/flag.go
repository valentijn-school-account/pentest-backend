package projects

import (
	"fmt"
	"github.com/gofiber/fiber/v2"
	"net/http"
	"pentest-backend/database"
	"pentest-backend/database/models"
)

type ParamProject struct {
	ProjectUUID string `json:"project"`
}

type ProjectFlag struct {
	ProjectUUID string `json:"project"`
	Flag        string `json:"flag"`
}

func HandleFetchFlag(c *fiber.Ctx) error {
	var param ParamProject

	if err := c.BodyParser(&param); err != nil {
		return fiber.NewError(http.StatusUnprocessableEntity, fmt.Sprintf("Can't process data: %v", err))
	}

	if param.ProjectUUID == "" {
		return fiber.NewError(http.StatusUnprocessableEntity, "Please provide a valid project uuid")
	}

	var project models.Project

	database.Client.Table("projects").Where(&models.Project{UUID: param.ProjectUUID}).First(&project)

	if project.ID == 0 {
		return fiber.NewError(http.StatusNotFound, "Project was not found.")
	}

	return c.JSON(&ProjectFlag{Flag: project.Flag, ProjectUUID: project.UUID})
}
