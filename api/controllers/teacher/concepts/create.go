package concepts

import (
	"fmt"
	"github.com/gofiber/fiber/v2"
	uuid2 "github.com/savsgio/gotils/uuid"
	"net/http"
	"pentest-backend/database"
	"pentest-backend/database/models"
)

type ParamConceptCreation struct {
	Topic string `json:"topic"`
	Title string `json:"title"`
}

func CreateConcept(c *fiber.Ctx) error {
	var param ParamConceptCreation

	if err := c.BodyParser(&param); err != nil {
		return fiber.NewError(http.StatusUnprocessableEntity, fmt.Sprintf("Can't process data: %v", err))
	}

	if param.Topic == "" || param.Title == "" {
		return fiber.NewError(http.StatusUnprocessableEntity, "Please provide a topic and title")
	}

	var topic models.Topic
	var concept models.Concept

	database.Client.Table("topics").Where(&models.Topic{UUID: param.Topic}).First(&topic)

	if topic.ID == 0 {
		return fiber.NewError(http.StatusNotFound, "Topic was not found.")
	}

	uuid := uuid2.V4()
	concept = models.Concept{UUID: uuid, Topic: topic.UUID, Name: param.Title, Description: ""}

	database.Client.Table("concepts").Create(&concept)

	return c.JSON(&concept)
}
