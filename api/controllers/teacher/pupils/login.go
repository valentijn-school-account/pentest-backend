package pupils

import (
	"github.com/dgrijalva/jwt-go"
	"github.com/gofiber/fiber/v2"
	"net/http"
	"pentest-backend/database/models"
	"pentest-backend/remote/google"
	"time"
)

func HandleSessionUser(c *fiber.Ctx) error {
	pupil := c.Locals("pupil").(models.User)
	token := jwt.NewWithClaims(jwt.SigningMethodHS256, google.GoogleClaims{LastName: pupil.LastName, FirstName: pupil.FirstName, Email: pupil.Mail, EmailVerified: true})

	// create a JWT for OUR app and give it back to the client for future requests
	tokenString, err := token.SignedString([]byte(google.JWTSecret))
	if err != nil {
		return fiber.NewError(http.StatusInternalServerError, "Couldn't make authentication token")
	}

	cookie := &fiber.Cookie{
		Name:    "pupil_authentication",
		Value:   tokenString,
		Expires: time.Now().Add(time.Hour * 1),
	}

	c.Cookie(cookie)
	return c.SendStatus(http.StatusOK)
}
