package classes

import (
	"github.com/gofiber/fiber/v2"
	uuid2 "github.com/savsgio/gotils/uuid"
	"net/http"
	"pentest-backend/database"
	"pentest-backend/database/models"
	"pentest-backend/remote/google"
)

// Route: /api/teacher/classes
func HandleCreateClass(c *fiber.Ctx) error {
	claims := c.Locals("user").(google.GoogleClaims)
	var user models.User
	database.Client.Table("users").Where(models.User{Mail: claims.Email}).First(&user)

	if user.ID == 0 {
		return fiber.NewError(http.StatusNotFound, "Could not fetch user details.")
	}

	var paramClass ParamClass

	err := c.BodyParser(&paramClass)
	if err != nil {
		return fiber.NewError(http.StatusUnprocessableEntity, "Please supply a name for the class")
	}

	uuid := uuid2.V4()
	class := models.Class{UUID: uuid, Name: paramClass.Name, TeacherID: user.ID}
	database.Client.Table("classes").Create(&class)
	return c.JSON(&class)

}

type ParamClass struct {
	Name string `json:"name"`
}
