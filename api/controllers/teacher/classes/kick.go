package classes

import (
	"github.com/gofiber/fiber/v2"
	"net/http"
	"pentest-backend/database"
	"pentest-backend/database/models"
	"pentest-backend/remote/google"
)

// Route: /api/teacher/classes/:class/pupil
func HandleRemovePupil(c *fiber.Ctx) error {
	claims := c.Locals("user").(google.GoogleClaims)
	var user models.User
	database.Client.Table("users").Where(models.User{Mail: claims.Email}).First(&user)

	if user.ID == 0 {
		return fiber.NewError(http.StatusNotFound, "Could not fetch user details.")
	}

	class := c.Locals("class").(models.Class)
	firstname := c.Query("firstname")
	lastname := c.Query("lastname")

	if firstname == "" || lastname == "" {
		return fiber.NewError(http.StatusNotAcceptable, "Please supply both a first and last name.")
	}

	var pupil models.User
	database.Client.Table("users").Where(models.User{FirstName: firstname, LastName: lastname}).First(&pupil)

	if pupil.ID == 0 {
		return fiber.NewError(http.StatusNotFound, "Pupil not found.")
	}

	if pupil.Class != class.UUID {
		return fiber.NewError(http.StatusBadRequest, "Pupil is not in this class.")
	}

	pupil.Class = ""
	database.Client.Table("users").Save(&pupil).Where("id", pupil.ID)
	return c.SendStatus(http.StatusOK)
}
