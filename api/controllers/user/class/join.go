package class

import (
	"github.com/gofiber/fiber/v2"
	"net/http"
	"pentest-backend/database"
	"pentest-backend/database/models"
	"pentest-backend/remote/google"
)

// Route: /user/class/join
func HandleJoinClass(c *fiber.Ctx) error {
	claims := c.Locals("user").(google.GoogleClaims)
	var user models.User
	database.Client.Table("users").Where(models.User{Mail: claims.Email}).First(&user)

	if user.ID == 0 {
		return fiber.NewError(http.StatusNotFound, "Could not fetch user details.")
	}

	var class models.Class
	database.Client.Table("classes").Where(&models.Class{UUID: user.Class}).First(&class)

	if class.ID != 0 && user.Class != "" {
		return fiber.NewError(http.StatusBadRequest, "You have already been added to a class, leave one first.")
	}

	query := c.Query("class")

	if query == "" {
		return fiber.NewError(http.StatusBadRequest, "Please enter a valid class code.")
	}

	database.Client.Table("classes").Where(&models.Class{Code: query}).First(&class)

	if class.ID == 0 {
		return fiber.NewError(http.StatusBadRequest, "This code is either invalid or expired.")
	}

	user.Class = class.UUID
	database.Client.Table("users").Where("id", user.ID).Save(&user)
	return c.SendStatus(http.StatusOK)
}
