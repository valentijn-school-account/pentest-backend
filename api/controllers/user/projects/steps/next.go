package steps

import (
	"fmt"
	"github.com/gofiber/fiber/v2"
	"net/http"
	"pentest-backend/database"
	"pentest-backend/database/models"
	"time"
)

// Route: /user/project/:uuid/step/:step/complete
func HandleNextStep(c *fiber.Ctx) error {
	project := c.Locals("project").(models.Project)
	var steps []models.Step
	var progress models.Progress
	database.Client.Table("steps").Where("project_id", project.ID).Find(&steps)
	database.Client.Table("progress").Where(&models.Progress{UserID: c.Locals("user_id").(uint), ProjectID: project.ID}).First(&progress)

	step := steps[progress.Index]

	fmt.Printf("\nIndex: %v", progress.Index)
	fmt.Printf("\nSteps: %v", len(steps))

	if progress.Index >= len(steps)-1 {
		return fiber.NewError(http.StatusBadRequest, "No next step found.")
	}

	step = steps[progress.Index+1]
	progress.Index = progress.Index + 1
	progress.UsedAt = time.Now()
	database.Client.Save(&progress).Where(&models.Progress{UserID: c.Locals("user_id").(uint), ProjectID: project.ID})

	//index-1
	//save

	//als index == size steps
	//als index == 0

	return c.JSON(step)
}
