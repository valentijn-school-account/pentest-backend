package projects

import (
	"github.com/gofiber/fiber/v2"
	"net/http"
	"pentest-backend/database"
	"pentest-backend/database/models"
)

// Route: /user/project/:uuid/step/:step/complete
func HandleNextStep(c *fiber.Ctx) error {
	project := c.Locals("project").(models.Project)
	var steps []models.Step
	var progress models.Progress
	step := c.Locals("step").(models.Step)
	database.Client.Table("steps").Where("project_id", project.ID).Find(&steps)
	database.Client.Table("progress").Where(&models.Progress{UserID: c.Locals("user_id").(uint), ProjectID: project.ID}).First(&progress)

	for _, b := range progress.Steps {
		if b == step.UUID {
			return fiber.NewError(http.StatusAlreadyReported, "Step already completed.")
		}
	}
	progress.Steps = append(progress.Steps, step.UUID)
	database.Client.Save(&progress).Where(&models.Progress{UserID: c.Locals("user_id").(uint), ProjectID: project.ID})
	return c.SendStatus(http.StatusAccepted)
}
